<#include "/java_copyright.include">
<#assign className = clazz.className>
<#assign classNameLower = className?uncap_first>
package ${basepackage}.${subpackage}.controller.${namespace};

import net.ptnetwork.controller.admin.BaseController;
import javax.inject.Inject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import net.ptnetwork.Message;
import net.ptnetwork.Pageable;
import net.ptnetwork.entity.BaseEntity;
import ${basepackage}.${subpackage}.service.${namespace}.${className}Service;
import ${basepackage}.${subpackage}.entity.${namespace}.${className};

<#include "/custom.include"/>

@Controller("${namespace}${className}Controller")
@RequestMapping("/${namespace}/${classNameLower}")
public class ${className}Controller extends BaseController {

	@Inject
	private ${className}Service ${classNameLower}Service;


	/**
	 * 添加
	 */
	@GetMapping("/add")
	public String add(ModelMap model) {
		return "${namespace}/${classNameLower}/add";
	}

	/**
	 * 保存
	 */
	@PostMapping("/save")
	public String save(${className} ${classNameLower},RedirectAttributes redirectAttributes) {
		if (!isValid(${classNameLower}, BaseEntity.Save.class)) {
			return ERROR_VIEW;
		}
		${classNameLower}Service.save(${classNameLower});
		addFlashMessage(redirectAttributes, SUCCESS_MESSAGE);
		return "redirect:list";
	}

	/**
	 * 编辑
	 */
	@GetMapping("/edit")
	public String edit(Long id, ModelMap model) {
		model.addAttribute("${classNameLower}", ${classNameLower}Service.find(id));
		return "${namespace}/${classNameLower}/edit";
	}

	/**
	 * 更新
	 */
	@PostMapping("/update")
	public String update(${className} ${classNameLower},RedirectAttributes redirectAttributes) {
		if (!isValid(${classNameLower})) {
			return ERROR_VIEW;
		}
        ${classNameLower}Service.update(${classNameLower}, "id");
		addFlashMessage(redirectAttributes, SUCCESS_MESSAGE);
		return "redirect:list";
	}

	/**
	 * 列表
	 */
	@GetMapping("/list")
	public String list(Pageable pageable, ModelMap model) {
		model.addAttribute("page", ${classNameLower}Service.findPage(pageable));
		return "${namespace}/${classNameLower}/list";
	}

	/**
	 * 删除
	 */
	@PostMapping("/delete")
	public @ResponseBody Message delete(Long[] ids) {
		${classNameLower}Service.delete(ids);
		return SUCCESS_MESSAGE;
	}

}